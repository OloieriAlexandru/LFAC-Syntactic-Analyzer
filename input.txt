func functionWithNoDefaultParameters (int a, bool b, string c, float d, char e) -> int {
 	return 0;
}

func functionWithDefaultParameters (int a = 5, bool b = true, string c = "asdasd", float d = 10.124, char e = 'a') -> int {
	return 1;
}

func functionWithMixedParameters (int a, bool b, string c, float d = -421.9, char e = 'b') -> bool {
	return 2;
}

func isPerfectSquare (int x) -> bool {  
	if ((x % 2 == 0 && x > 2) || x == 1) -> {
		return false;
	}
	for (def d = 3 -> int ; d * d <= x ; d += 2) -> {
		if (x % d == 0) -> {
			return false;
		}
	}
	return true;
}

def const NMAX = 1000 -> int;

func function1 ( float a, int b ) -> bool { }

func voidFunc ( ) -> void { }

defType testStructure -> {
	def a, b, c -> int;          
	def someArray[1000] -> float;
	func incredibleFunction() -> void {
		return;
	}
	func intIntFunction() -> int {
	 	return someArray[152];
	}                            
}

def object testObject = { a : 5, b : 6 } -> testStructure;

defType secondTestStructure -> {
	func whileLoopFunction() -> bool {
	 	def a = 10, b = 15 -> int;
		while (b >= a) -> {
			--b;
		}	    
		return (a == b);
	}
	func doWhileLoopFunction() -> bool {
	 	def a = 10, b = 15 -> int;
		do -> {     
			++a;
		} while (a < b);
		return (a == b);
	}
	func elseIfStatement() -> float {
	        if (10 == 5) -> {
	         	return 0.051;
		} else if (6 == 7) -> {
		  	return 2941.421;
		} else if (5 < 95) -> {
		        return 59;
		}
		return 1.521*10-testObject::intIntFunction(());
	}
}

main -> void {             
	def b = function1((10.5,10)), c = function1((6.124,412)) -> bool;
	for (def i = 1 -> int ; i <= b ; ++i) -> {
	 	voidFunc(());	
	}

	def value = 10 -> int;  
	value += 6;

	c = true;

	testObject::incredibleFunction(());
}
