Borlo language:

### Types:
* int, float, char, string, bool, void

### Const types:
* const int, float, char, string, bool, void

### Functions:                                           
* func ID ( parameters ) -> returnType { functionBody }
                                              
### Custom types:
* defType ID -> { customTypeBodyDeclarations }

### Variable declarations:
* simple:
def ID -> type;
* multiple:
def ID1 = value, ID2 -> type;
* arrays:
def ID[size] -> type;
* const:
def const ID -> type;
* custom type:
def object ID = { attributeID1 : value, attributeID2 : value } -> type;
                                          
### Main function:
* main -> anyType { mainFunctionBody } 

### Statements:
* If statement:
	if ( condition ) -> { } else -> { }
	if ( condition1 ) -> { } else if ( condition2 ) -> { } else -> { }
* While loop:
	while ( condition ) -> { }
* For loop:
	for ( def var = value ; condition ; expression ) -> { }
* Do while loop:
	do -> { } while (condition);
* Assignment statement:
	ID = expression;
* Return statement:
	return expression;

### Function call:
* functionID (( callParameters )) -> arithmetic_expreesion, int type
* object::functionID (( callParameters ))
* $functionID (( callParameters )) -> normal_function_call, any type
* $object::functionID (( callParameters )) 
